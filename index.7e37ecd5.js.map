{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAOQ,EAPF,EAAgB,SAAS,aAAa,CAAC,MAE7C,SAAS,EAAsB,CAAM,EACnC,OAAO,OAAO,EAAO,OAAO,CAAC,QAAS,IACxC,CAKE,CAFM,EAAW,EAAG,AAuBb,EAvBkB,QAAQ,GAEzB,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjB,EACE,IAAM,EAAU,EAAsB,EAAE,OAAO,CAAC,MAAM,EAGtD,OAAO,AAFS,EAAsB,EAAE,OAAO,CAAC,MAAM,EAErC,CACnB,GAEA,EAAQ,OAAO,CAAC,SAAC,CAAjB,EAA8B,OAAA,AAcvB,EAd4B,WAAW,CAAC,E,GAMxC,AAFU,EAAG,AAWT,EAXc,QAAQ,EAElB,GAAG,CAAC,SAAC,CAApB,EAAkC,MAAA,CAChC,KAAM,EAAS,WAAW,CAAC,IAAI,GAC/B,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,CAC/B,IAAK,EAAS,OAAO,CAAC,GAAG,AAC3B,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar employeesList = document.querySelector(\"ul\");\nfunction convertStringToNumber(string) {\n    return Number(string.replace(/[$,]/g, \"\"));\n}\nfunction sortList(list) {\n    var empList = _to_consumable_array(list.children);\n    empList.sort(function(a, b) {\n        var salaryA = convertStringToNumber(a.dataset.salary);\n        var salaryB = convertStringToNumber(b.dataset.salary);\n        return salaryB - salaryA;\n    });\n    empList.forEach(function(employee) {\n        return list.appendChild(employee);\n    });\n}\nfunction getEmployees(list) {\n    var empList = _to_consumable_array(list.children);\n    return empList.map(function(employee) {\n        return {\n            name: employee.textContent.trim(),\n            position: employee.dataset.position,\n            salary: employee.dataset.salary,\n            age: employee.dataset.age\n        };\n    });\n}\nsortList(employeesList);\ngetEmployees(employeesList);\n\n//# sourceMappingURL=index.7e37ecd5.js.map\n","'use strict';\n\nconst employeesList = document.querySelector('ul');\n\nfunction convertStringToNumber(string) {\n  return Number(string.replace(/[$,]/g, ''));\n}\n\nfunction sortList(list) {\n  const empList = [...list.children];\n\n  empList.sort((a, b) => {\n    const salaryA = convertStringToNumber(a.dataset.salary);\n    const salaryB = convertStringToNumber(b.dataset.salary);\n\n    return salaryB - salaryA;\n  });\n\n  empList.forEach((employee) => list.appendChild(employee));\n}\n\nfunction getEmployees(list) {\n  const empList = [...list.children];\n\n  return empList.map((employee) => ({\n    name: employee.textContent.trim(),\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  }));\n}\n\nsortList(employeesList);\ngetEmployees(employeesList);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","empList","employeesList","document","querySelector","convertStringToNumber","string","Number","replace","list","children","sort","a","b","salaryA","dataset","salary","salaryB","forEach","employee","appendChild","map","textContent","trim","position","age"],"version":3,"file":"index.7e37ecd5.js.map"}